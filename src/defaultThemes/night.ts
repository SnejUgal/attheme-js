// This file was automatically generated by .attheme default theme
// generator, available at:
//     https://gitlab.com/snejugal/attheme-default-theme-generator

import Attheme from "..";
import { Color } from "../types";
import { PartialHsbColor, hsbToRgb } from "@snejugal/color";

/**
 * Generates the Night theme.
 */
const night = (accent: PartialHsbColor) =>
  new Attheme([
    [
      `actionBarActionModeDefault`,
      {
        red: 39,
        green: 39,
        blue: 39,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarActionModeDefaultIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarActionModeDefaultSelector`,
      {
        red: 62,
        green: 62,
        blue: 62,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarActionModeDefaultTop`,
      {
        red: 38,
        green: 38,
        blue: 38,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarBrowser`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.22096885785727888),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.45658905149872886 + 0.010694269353119684,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefault`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.22096885785727888),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.45658905149872886 + 0.010694269353119684,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultArchived`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.0980476852947716),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.2808369153852794 + 0.01891273767641053,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultArchivedIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultArchivedSearch`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultArchivedSelector`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.07029985398780413),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.45138097028145496 + 0.04446501948774829,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultArchivedTitle`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultSearch`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultSearchArchivedPlaceholder`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 136,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultSearchPlaceholder`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 136,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultSelector`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.08188722118098507),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.36323613288324585 + 0.03012181977549989,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultSubmenuBackground`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.0980476852947716),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.2808369153852794 + 0.01891273767641053,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultSubmenuItem`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultSubmenuItemIcon`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.03828560687479081),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.0675390657750596 + 0.20346397474316452,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultSubtitle`,
      {
        red: 135,
        green: 135,
        blue: 135,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarDefaultTitle`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarTabActiveText`,
      {
        red: 92,
        green: 193,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarTabLine`,
      {
        red: 67,
        green: 183,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarTabSelector`,
      {
        red: 88,
        green: 99,
        blue: 106,
        alpha: 49,
      } as Color,
    ] as [string, Color],
    [
      `actionBarTabUnactiveText`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.03464468379380115),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.2292336849203291 + 0.26040314912788975,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `actionBarWhiteSelector`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 16,
      } as Color,
    ] as [string, Color],
    [
      `avatar_actionBarIconBlue`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_actionBarSelectorBlue`,
      {
        red: 60,
        green: 60,
        blue: 60,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_actionBarSelectorCyan`,
      {
        red: 61,
        green: 83,
        blue: 108,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_actionBarSelectorGreen`,
      {
        red: 61,
        green: 83,
        blue: 108,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_actionBarSelectorOrange`,
      {
        red: 61,
        green: 83,
        blue: 108,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_actionBarSelectorPink`,
      {
        red: 61,
        green: 83,
        blue: 108,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_actionBarSelectorRed`,
      {
        red: 61,
        green: 83,
        blue: 108,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_actionBarSelectorViolet`,
      {
        red: 61,
        green: 83,
        blue: 108,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundActionBarBlue`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.11692673645718614),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.21815826321017848 + 0.011910536355708852,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundActionBarCyan`,
      {
        red: 33,
        green: 45,
        blue: 59,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundActionBarGreen`,
      {
        red: 33,
        green: 45,
        blue: 59,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundActionBarOrange`,
      {
        red: 33,
        green: 45,
        blue: 59,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundActionBarPink`,
      {
        red: 33,
        green: 45,
        blue: 59,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundActionBarRed`,
      {
        red: 33,
        green: 45,
        blue: 59,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundActionBarViolet`,
      {
        red: 33,
        green: 45,
        blue: 59,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundArchived`,
      {
        red: 60,
        green: 60,
        blue: 60,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundArchivedHidden`,
      {
        red: 68,
        green: 161,
        blue: 232,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundBlue`,
      {
        red: 84,
        green: 156,
        blue: 221,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundCyan`,
      {
        red: 95,
        green: 190,
        blue: 213,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundGreen`,
      {
        red: 118,
        green: 200,
        blue: 77,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundGroupCreateSpanBlue`,
      {
        red: 60,
        green: 60,
        blue: 60,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundInProfileBlue`,
      {
        red: 84,
        green: 156,
        blue: 221,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundOrange`,
      {
        red: 242,
        green: 188,
        blue: 100,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundPink`,
      {
        red: 242,
        green: 116,
        blue: 154,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundRed`,
      {
        red: 220,
        green: 128,
        blue: 91,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundSaved`,
      {
        red: 79,
        green: 161,
        blue: 232,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_backgroundViolet`,
      {
        red: 142,
        green: 133,
        blue: 238,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_nameInMessageBlue`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_nameInMessageCyan`,
      {
        red: 93,
        green: 229,
        blue: 221,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_nameInMessageGreen`,
      {
        red: 148,
        green: 231,
        blue: 133,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_nameInMessageOrange`,
      {
        red: 255,
        green: 201,
        blue: 96,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_nameInMessagePink`,
      {
        red: 246,
        green: 119,
        blue: 155,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_nameInMessageRed`,
      {
        red: 255,
        green: 173,
        blue: 124,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_nameInMessageViolet`,
      {
        red: 154,
        green: 161,
        blue: 251,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_subtitleInProfileBlue`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.035089616136743884),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.207300885883746 + 0.2523361309102584,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_subtitleInProfileCyan`,
      {
        red: 139,
        green: 151,
        blue: 162,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_subtitleInProfileGreen`,
      {
        red: 139,
        green: 151,
        blue: 162,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_subtitleInProfileOrange`,
      {
        red: 139,
        green: 151,
        blue: 162,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_subtitleInProfilePink`,
      {
        red: 139,
        green: 151,
        blue: 162,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_subtitleInProfileRed`,
      {
        red: 139,
        green: 151,
        blue: 162,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_subtitleInProfileViolet`,
      {
        red: 139,
        green: 151,
        blue: 162,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `avatar_text`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `calls_callReceivedGreenIcon`,
      {
        red: 72,
        green: 221,
        blue: 118,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `calls_callReceivedRedIcon`,
      {
        red: 255,
        green: 72,
        blue: 72,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `changephoneinfo_image`,
      {
        red: 85,
        green: 85,
        blue: 85,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `changephoneinfo_image2`,
      {
        red: 80,
        green: 167,
        blue: 234,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_TextSelectionCursor`,
      {
        red: 87,
        green: 183,
        blue: 237,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_addContact`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_adminSelectedText`,
      {
        red: 141,
        green: 178,
        blue: 211,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_adminText`,
      {
        red: 125,
        green: 127,
        blue: 129,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachActiveTab`,
      {
        red: 106,
        green: 191,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachAudioBackground`,
      {
        red: 246,
        green: 111,
        blue: 107,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachAudioIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachCameraIcon1`,
      {
        red: 255,
        green: 130,
        blue: 85,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachCheckBoxBackground`,
      {
        red: 57,
        green: 178,
        blue: 247,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachCheckBoxCheck`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachContactBackground`,
      {
        red: 222,
        green: 176,
        blue: 69,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachContactIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachEmptyImage`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachFileBackground`,
      {
        red: 90,
        green: 188,
        blue: 244,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachFileIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachGalleryBackground`,
      {
        red: 77,
        green: 150,
        blue: 245,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachGalleryIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachHideBackground`,
      {
        red: 41,
        green: 63,
        blue: 86,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachLocationBackground`,
      {
        red: 54,
        green: 199,
        blue: 102,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachLocationIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachMediaBanBackground`,
      {
        red: 70,
        green: 70,
        blue: 70,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachMediaBanText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachPermissionImage`,
      {
        red: 246,
        green: 246,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachPermissionMark`,
      {
        red: 246,
        green: 87,
        blue: 78,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachPermissionText`,
      {
        red: 246,
        green: 246,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachPhotoBackground`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 8,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachPollBackground`,
      {
        red: 222,
        green: 176,
        blue: 69,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachPollIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_attachUnactiveTab`,
      {
        red: 109,
        green: 145,
        blue: 166,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_botButtonText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_botKeyboardButtonBackground`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.17784388422515401),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.6276374741979198 + 0.020032611404693472,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_botKeyboardButtonBackgroundPressed`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.12083674895956617),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.098248239964581 + 0.05760696786590497,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_botKeyboardButtonText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_botProgress`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_botSwitchToInlineText`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiBottomPanelIcon`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.043462176196047274),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.8924351468747369 + 0.14859765932835023,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelBackground`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.11948291105846502),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.21147909961169845 + 0.011246335892207164,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelBackspace`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.043462176196047274),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.8924351468747369 + 0.14859765932835023,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelBadgeBackground`,
      {
        red: 83,
        green: 180,
        blue: 245,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelBadgeText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelEmptyText`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.03882970443190465),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.0464782489440125 + 0.19648490814324882,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelIcon`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.043462176196047274),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.8924351468747369 + 0.14859765932835023,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelIconSelected`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelIconSelector`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelMasksIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelMasksIconSelected`,
      {
        red: 98,
        green: 191,
        blue: 232,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelNewTrending`,
      {
        red: 77,
        green: 166,
        blue: 234,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelShadowLine`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 160,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelStickerPackSelector`,
      {
        red: 205,
        green: 234,
        blue: 255,
        alpha: 10,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelStickerPackSelectorLine`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelStickerSetName`,
      {
        red: 130,
        green: 139,
        blue: 148,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelStickerSetNameHighlight`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelStickerSetNameIcon`,
      {
        red: 177,
        green: 182,
        blue: 188,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelTrendingDescription`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.03882970443190465),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.0464782489440125 + 0.19648490814324882,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiPanelTrendingTitle`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiSearchBackground`,
      {
        red: 205,
        green: 234,
        blue: 255,
        alpha: 10,
      } as Color,
    ] as [string, Color],
    [
      `chat_emojiSearchIcon`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.0417999046643413),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.9430017248618581 + 0.16369703642156777,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_fieldOverlayText`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_gifSaveHintBackground`,
      {
        red: 17,
        green: 17,
        blue: 17,
        alpha: 204,
      } as Color,
    ] as [string, Color],
    [
      `chat_gifSaveHintText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_goDownButton`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.11212898260471138),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.2316926752007293 + 0.013305821214727996,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_goDownButtonCounter`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_goDownButtonCounterBackground`,
      {
        red: 81,
        green: 170,
        blue: 238,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_goDownButtonIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_goDownButtonShadow`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inAudioCacheSeekbar`,
      {
        red: 96,
        green: 96,
        blue: 96,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inAudioDurationSelectedText`,
      {
        red: 141,
        green: 178,
        blue: 211,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inAudioDurationText`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.04086220408837083),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.9737205972399686 + 0.17316791218872385,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inAudioPerfomerSelectedText`,
      {
        red: 141,
        green: 178,
        blue: 211,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inAudioPerfomerText`,
      {
        red: 122,
        green: 124,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inAudioProgress`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inAudioSeekbar`,
      {
        red: 86,
        green: 86,
        blue: 86,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inAudioSeekbarFill`,
      {
        red: 114,
        green: 181,
        blue: 232,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inAudioSeekbarSelected`,
      {
        red: 115,
        green: 145,
        blue: 171,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inAudioSelectedProgress`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inAudioTitleText`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inBubble`,
      {
        red: 31,
        green: 33,
        blue: 35,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inBubbleSelected`,
      {
        red: 49,
        green: 74,
        blue: 97,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inBubbleShadow`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 50,
      } as Color,
    ] as [string, Color],
    [
      `chat_inContactBackground`,
      {
        red: 80,
        green: 153,
        blue: 232,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inContactIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inContactNameText`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inContactPhoneSelectedText`,
      {
        red: 141,
        green: 178,
        blue: 211,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inContactPhoneText`,
      {
        red: 126,
        green: 128,
        blue: 129,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inDownCall`,
      {
        red: 0,
        green: 200,
        blue: 83,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inFileBackground`,
      {
        red: 44,
        green: 44,
        blue: 44,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inFileBackgroundSelected`,
      {
        red: 61,
        green: 87,
        blue: 120,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inFileIcon`,
      {
        red: 40,
        green: 40,
        blue: 40,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inFileInfoSelectedText`,
      {
        red: 141,
        green: 178,
        blue: 211,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inFileInfoText`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.04086220408837083),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.9737205972399686 + 0.17316791218872385,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inFileNameText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inFileProgress`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inFileProgressSelected`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inFileSelectedIcon`,
      {
        red: 26,
        green: 64,
        blue: 99,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inForwardedNameText`,
      {
        red: 119,
        green: 188,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inGreenCall`,
      {
        red: 72,
        green: 221,
        blue: 118,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inInstant`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inInstantSelected`,
      {
        red: 169,
        green: 207,
        blue: 238,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inLoader`,
      {
        red: 80,
        green: 152,
        blue: 233,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inLoaderPhoto`,
      {
        red: 44,
        green: 44,
        blue: 44,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inLoaderPhotoIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inLoaderPhotoIconSelected`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inLoaderPhotoSelected`,
      {
        red: 28,
        green: 64,
        blue: 99,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inLoaderSelected`,
      {
        red: 83,
        green: 157,
        blue: 241,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inLocationBackground`,
      {
        red: 60,
        green: 60,
        blue: 60,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inLocationIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inMediaIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inMediaIconSelected`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inMenu`,
      {
        red: 93,
        green: 99,
        blue: 100,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inMenuSelected`,
      {
        red: 141,
        green: 178,
        blue: 211,
        alpha: 165,
      } as Color,
    ] as [string, Color],
    [
      `chat_inPreviewInstantSelectedText`,
      {
        red: 169,
        green: 207,
        blue: 238,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inPreviewInstantText`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inPreviewLine`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inReplyLine`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inReplyMediaMessageSelectedText`,
      {
        red: 141,
        green: 178,
        blue: 211,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inReplyMediaMessageText`,
      {
        red: 127,
        green: 128,
        blue: 129,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inReplyMessageText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inReplyNameText`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inSentClock`,
      {
        red: 87,
        green: 96,
        blue: 99,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inSentClockSelected`,
      {
        red: 141,
        green: 178,
        blue: 211,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inSiteNameText`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inTextSelectionHighlight`,
      {
        red: 78,
        green: 180,
        blue: 243,
        alpha: 90,
      } as Color,
    ] as [string, Color],
    [
      `chat_inTimeSelectedText`,
      {
        red: 141,
        green: 178,
        blue: 211,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inTimeText`,
      {
        red: 125,
        green: 127,
        blue: 129,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inUpCall`,
      {
        red: 255,
        green: 72,
        blue: 72,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inVenueInfoSelectedText`,
      {
        red: 141,
        green: 178,
        blue: 211,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inVenueInfoText`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.04086220408837083),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.9737205972399686 + 0.17316791218872385,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inViaBotNameText`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inViews`,
      {
        red: 120,
        green: 124,
        blue: 128,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inViewsSelected`,
      {
        red: 141,
        green: 178,
        blue: 211,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inVoiceSeekbar`,
      {
        red: 99,
        green: 99,
        blue: 99,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inVoiceSeekbarFill`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inVoiceSeekbarSelected`,
      {
        red: 115,
        green: 145,
        blue: 171,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_inlineResultIcon`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_linkSelectBackground`,
      {
        red: 98,
        green: 169,
        blue: 227,
        alpha: 90,
      } as Color,
    ] as [string, Color],
    [
      `chat_lockIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaBroadcast`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaInfoText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaLoaderPhoto`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 102,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaLoaderPhotoIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaLoaderPhotoIconSelected`,
      {
        red: 217,
        green: 217,
        blue: 217,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaLoaderPhotoSelected`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 127,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaMenu`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaProgress`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaSentCheck`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaSentClock`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 178,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaTimeBackground`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 102,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaTimeText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_mediaViews`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messageLinkIn`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messageLinkOut`,
      {
        red: 174,
        green: 223,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelBackground`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.11948291105846502),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.21147909961169845 + 0.011246335892207164,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelCancelInlineBot`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.03882970443190465),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.0464782489440125 + 0.19648490814324882,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelCursor`,
      {
        red: 84,
        green: 161,
        blue: 219,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelHint`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.04278165139301894),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.9125661579112074 + 0.15453525253326578,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelIcons`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.0801018347790752),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.97837782831612 + 0.16822827434021534,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelPressedSend`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelSend`,
      {
        red: 76,
        green: 169,
        blue: 244,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelShadow`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 121,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelVideoFrame`,
      {
        red: 75,
        green: 173,
        blue: 247,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelVoiceBackground`,
      {
        red: 68,
        green: 139,
        blue: 204,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelVoiceDelete`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelVoiceDuration`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelVoicePressed`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messagePanelVoiceShadow`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 13,
      } as Color,
    ] as [string, Color],
    [
      `chat_messageTextIn`,
      {
        red: 250,
        green: 250,
        blue: 250,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_messageTextOut`,
      {
        red: 250,
        green: 250,
        blue: 250,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_muteIcon`,
      {
        red: 92,
        green: 92,
        blue: 92,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outAudioCacheSeekbar`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outAudioDurationSelectedText`,
      {
        red: 148,
        green: 211,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outAudioDurationText`,
      {
        red: 148,
        green: 211,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outAudioPerfomerSelectedText`,
      {
        red: 148,
        green: 211,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outAudioPerfomerText`,
      {
        red: 148,
        green: 211,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outAudioProgress`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outAudioSeekbar`,
      {
        red: 125,
        green: 199,
        blue: 255,
        alpha: 223,
      } as Color,
    ] as [string, Color],
    [
      `chat_outAudioSeekbarFill`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outAudioSeekbarSelected`,
      {
        red: 125,
        green: 199,
        blue: 255,
        alpha: 222,
      } as Color,
    ] as [string, Color],
    [
      `chat_outAudioSelectedProgress`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outAudioTitleText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outBroadcast`,
      {
        red: 70,
        green: 170,
        blue: 54,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outBubble`,
      {
        red: 54,
        green: 108,
        blue: 175,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outBubbleGradient`,
      {
        red: 59,
        green: 140,
        blue: 185,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outBubbleGradientSelectedOverlay`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 20,
      } as Color,
    ] as [string, Color],
    [
      `chat_outBubbleSelected`,
      {
        red: 75,
        green: 125,
        blue: 175,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outBubbleShadow`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 50,
      } as Color,
    ] as [string, Color],
    [
      `chat_outContactBackground`,
      {
        red: 104,
        green: 163,
        blue: 215,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outContactIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outContactNameText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outContactPhoneSelectedText`,
      {
        red: 148,
        green: 211,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outContactPhoneText`,
      {
        red: 148,
        green: 211,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outFileBackground`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 30,
      } as Color,
    ] as [string, Color],
    [
      `chat_outFileBackgroundSelected`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 30,
      } as Color,
    ] as [string, Color],
    [
      `chat_outFileIcon`,
      {
        red: 62,
        green: 97,
        blue: 137,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outFileInfoSelectedText`,
      {
        red: 190,
        green: 223,
        blue: 250,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outFileInfoText`,
      {
        red: 143,
        green: 188,
        blue: 223,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outFileNameText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outFileProgress`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outFileProgressSelected`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outFileSelectedIcon`,
      {
        red: 43,
        green: 131,
        blue: 203,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outForwardedNameText`,
      {
        red: 172,
        green: 221,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outGreenCall`,
      {
        red: 72,
        green: 221,
        blue: 118,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outInstant`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outInstantSelected`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outLoader`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outLoaderPhoto`,
      {
        red: 63,
        green: 97,
        blue: 137,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outLoaderPhotoIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outLoaderPhotoIconSelected`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outLoaderPhotoSelected`,
      {
        red: 54,
        green: 114,
        blue: 164,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outLoaderSelected`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outLocationBackground`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 16,
      } as Color,
    ] as [string, Color],
    [
      `chat_outLocationIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outMediaIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outMediaIconSelected`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outMenu`,
      {
        red: 142,
        green: 196,
        blue: 243,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outMenuSelected`,
      {
        red: 190,
        green: 223,
        blue: 250,
        alpha: 223,
      } as Color,
    ] as [string, Color],
    [
      `chat_outPreviewInstantSelectedText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outPreviewInstantText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outPreviewLine`,
      {
        red: 154,
        green: 205,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outReplyLine`,
      {
        red: 126,
        green: 206,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outReplyMediaMessageSelectedText`,
      {
        red: 148,
        green: 211,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outReplyMediaMessageText`,
      {
        red: 148,
        green: 211,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outReplyMessageText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outReplyNameText`,
      {
        red: 159,
        green: 217,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outSentCheck`,
      {
        red: 201,
        green: 240,
        blue: 255,
        alpha: 225,
      } as Color,
    ] as [string, Color],
    [
      `chat_outSentCheckRead`,
      {
        red: 201,
        green: 240,
        blue: 255,
        alpha: 225,
      } as Color,
    ] as [string, Color],
    [
      `chat_outSentCheckReadSelected`,
      {
        red: 166,
        green: 219,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outSentCheckSelected`,
      {
        red: 166,
        green: 219,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outSentClock`,
      {
        red: 153,
        green: 201,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outSentClockSelected`,
      {
        red: 190,
        green: 223,
        blue: 250,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outSiteNameText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outTextSelectionHighlight`,
      {
        red: 126,
        green: 192,
        blue: 237,
        alpha: 126,
      } as Color,
    ] as [string, Color],
    [
      `chat_outTimeSelectedText`,
      {
        red: 148,
        green: 211,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outTimeText`,
      {
        red: 148,
        green: 211,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outUpCall`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outVenueInfoSelectedText`,
      {
        red: 148,
        green: 211,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outVenueInfoText`,
      {
        red: 148,
        green: 211,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outVenueNameText`,
      {
        red: 209,
        green: 235,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outViaBotNameText`,
      {
        red: 172,
        green: 221,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outViews`,
      {
        red: 143,
        green: 188,
        blue: 223,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outViewsSelected`,
      {
        red: 190,
        green: 223,
        blue: 250,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outVoiceSeekbar`,
      {
        red: 99,
        green: 170,
        blue: 226,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outVoiceSeekbarFill`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_outVoiceSeekbarSelected`,
      {
        red: 114,
        green: 164,
        blue: 220,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_previewDurationText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_previewGameText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_recordTime`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_recordVoiceCancel`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.03882970443190465),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.0464782489440125 + 0.19648490814324882,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_recordedVoiceBackground`,
      {
        red: 77,
        green: 158,
        blue: 238,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_recordedVoiceDot`,
      {
        red: 237,
        green: 93,
        blue: 84,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_recordedVoicePlayPause`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_recordedVoicePlayPausePressed`,
      {
        red: 217,
        green: 234,
        blue: 251,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_recordedVoiceProgress`,
      {
        red: 162,
        green: 206,
        blue: 248,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_recordedVoiceProgressInner`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_replyPanelClose`,
      {
        red: 118,
        green: 119,
        blue: 121,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_replyPanelIcons`,
      {
        red: 86,
        green: 157,
        blue: 233,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_replyPanelLine`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 166,
      } as Color,
    ] as [string, Color],
    [
      `chat_replyPanelMessage`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.03882970443190465),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.0464782489440125 + 0.19648490814324882,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_replyPanelName`,
      {
        red: 98,
        green: 180,
        blue: 249,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_reportSpam`,
      {
        red: 233,
        green: 100,
        blue: 97,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_searchPanelIcons`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.023581313934508002),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 2.1135974456333293 + 0.6693281495420152,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_searchPanelText`,
      {
        red: 91,
        green: 178,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_secretChatStatusText`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.03882970443190465),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.0464782489440125 + 0.19648490814324882,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_secretTimeText`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.024756488004529214),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.9737613126072249 + 0.5942867621313629,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_secretTimerBackground`,
      {
        red: 30,
        green: 30,
        blue: 30,
        alpha: 182,
      } as Color,
    ] as [string, Color],
    [
      `chat_secretTimerText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_selectedBackground`,
      {
        red: 95,
        green: 157,
        blue: 227,
        alpha: 42,
      } as Color,
    ] as [string, Color],
    [
      `chat_sentError`,
      {
        red: 246,
        green: 87,
        blue: 78,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_sentErrorIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_serviceBackground`,
      {
        red: 55,
        green: 55,
        blue: 55,
        alpha: 150,
      } as Color,
    ] as [string, Color],
    [
      `chat_serviceBackgroundSelected`,
      {
        red: 155,
        green: 165,
        blue: 174,
        alpha: 89,
      } as Color,
    ] as [string, Color],
    [
      `chat_serviceIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_serviceLink`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_serviceText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_shareBackground`,
      {
        red: 114,
        green: 143,
        blue: 166,
        alpha: 102,
      } as Color,
    ] as [string, Color],
    [
      `chat_shareBackgroundSelected`,
      {
        red: 114,
        green: 143,
        blue: 166,
        alpha: 153,
      } as Color,
    ] as [string, Color],
    [
      `chat_status`,
      {
        red: 116,
        green: 189,
        blue: 249,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_stickerNameText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_stickerReplyLine`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_stickerReplyMessageText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_stickerReplyNameText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_stickerViaBotNameText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_stickersHintPanel`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.11212898260471138),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.2316926752007293 + 0.013305821214727996,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_textSelectBackground`,
      {
        red: 98,
        green: 169,
        blue: 227,
        alpha: 90,
      } as Color,
    ] as [string, Color],
    [
      `chat_topPanelBackground`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.1309320307366872),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.1853682052594437 + 0.008807552958486497,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_topPanelClose`,
      {
        red: 118,
        green: 119,
        blue: 121,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_topPanelLine`,
      {
        red: 91,
        green: 163,
        blue: 227,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_topPanelMessage`,
      {
        red: 124,
        green: 125,
        blue: 126,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_topPanelTitle`,
      {
        red: 93,
        green: 169,
        blue: 236,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_unreadMessagesStartArrowIcon`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.08643650632369579),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.774853055410099 + 0.13835080622344076,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_unreadMessagesStartBackground`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.11212898260471138),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.2316926752007293 + 0.013305821214727996,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_unreadMessagesStartText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 218,
      } as Color,
    ] as [string, Color],
    [
      `chat_wallpaper`,
      {
        red: 7,
        green: 7,
        blue: 7,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chat_wallpaper_gradient_to`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.1777715956816417),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.11898558090633884 + 0.0037998269639997265,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_actionBackground`,
      {
        red: 94,
        green: 160,
        blue: 219,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_actionIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_actionMessage`,
      {
        red: 100,
        green: 175,
        blue: 233,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_actionPressedBackground`,
      {
        red: 112,
        green: 188,
        blue: 230,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_actionUnreadBackground`,
      {
        red: 79,
        green: 154,
        blue: 219,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_actionUnreadIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_actionUnreadPressedBackground`,
      {
        red: 118,
        green: 192,
        blue: 237,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_archiveBackground`,
      {
        red: 69,
        green: 138,
        blue: 210,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_archiveIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_archivePinBackground`,
      {
        red: 48,
        green: 48,
        blue: 48,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_archivePullDownBackground`,
      {
        red: 40,
        green: 40,
        blue: 40,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_archivePullDownBackgroundActive`,
      {
        red: 102,
        green: 169,
        blue: 224,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_archiveText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_attachMessage`,
      {
        red: 130,
        green: 130,
        blue: 130,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_date`,
      {
        red: 120,
        green: 120,
        blue: 120,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_draft`,
      {
        red: 252,
        green: 71,
        blue: 74,
        alpha: 217,
      } as Color,
    ] as [string, Color],
    [
      `chats_mentionIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_menuBackground`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.13414547109980104),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.1789962606590574 + 0.008251274564596617,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_menuCloud`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_menuCloudBackgroundCats`,
      {
        red: 84,
        green: 156,
        blue: 221,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_menuItemCheck`,
      {
        red: 89,
        green: 143,
        blue: 186,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_menuItemIcon`,
      {
        red: 130,
        green: 130,
        blue: 130,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_menuItemText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 244,
      } as Color,
    ] as [string, Color],
    [
      `chats_menuName`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_menuPhone`,
      {
        red: 200,
        green: 200,
        blue: 200,
        alpha: 147,
      } as Color,
    ] as [string, Color],
    [
      `chats_menuPhoneCats`,
      {
        red: 130,
        green: 130,
        blue: 130,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_menuTopBackgroundCats`,
      {
        red: 17,
        green: 18,
        blue: 19,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_menuTopShadow`,
      {
        red: 29,
        green: 29,
        blue: 29,
        alpha: 164,
      } as Color,
    ] as [string, Color],
    [
      `chats_message`,
      {
        red: 130,
        green: 130,
        blue: 130,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_messageArchived`,
      {
        red: 130,
        green: 130,
        blue: 130,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_message_threeLines`,
      {
        red: 130,
        green: 130,
        blue: 130,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_muteIcon`,
      {
        red: 85,
        green: 85,
        blue: 85,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_name`,
      {
        red: 241,
        green: 241,
        blue: 241,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_nameArchived`,
      {
        red: 170,
        green: 170,
        blue: 170,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_nameIcon`,
      {
        red: 236,
        green: 236,
        blue: 236,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_nameMessage`,
      {
        red: 235,
        green: 235,
        blue: 235,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_nameMessageArchived`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_nameMessageArchived_threeLines`,
      {
        red: 235,
        green: 235,
        blue: 235,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_nameMessage_threeLines`,
      {
        red: 235,
        green: 235,
        blue: 235,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_onlineCircle`,
      {
        red: 55,
        green: 164,
        blue: 249,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_pinnedIcon`,
      {
        red: 100,
        green: 100,
        blue: 100,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_pinnedOverlay`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 0,
      } as Color,
    ] as [string, Color],
    [
      `chats_secretIcon`,
      {
        red: 113,
        green: 215,
        blue: 86,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_secretName`,
      {
        red: 113,
        green: 215,
        blue: 86,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_sentCheck`,
      {
        red: 70,
        green: 173,
        blue: 243,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_sentClock`,
      {
        red: 110,
        green: 110,
        blue: 110,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_sentError`,
      {
        red: 213,
        green: 82,
        blue: 82,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_sentErrorIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_sentReadCheck`,
      {
        red: 70,
        green: 173,
        blue: 243,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_tabletSelectedOverlay`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 15,
      } as Color,
    ] as [string, Color],
    [
      `chats_unreadCounter`,
      {
        red: 57,
        green: 158,
        blue: 243,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_unreadCounterMuted`,
      {
        red: 69,
        green: 69,
        blue: 69,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_unreadCounterText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_verifiedBackground`,
      {
        red: 70,
        green: 170,
        blue: 247,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `chats_verifiedCheck`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `checkbox`,
      {
        red: 94,
        green: 194,
        blue: 69,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `checkboxCheck`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `checkboxDisabled`,
      {
        red: 69,
        green: 69,
        blue: 69,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `checkboxSquareBackground`,
      {
        red: 100,
        green: 181,
        blue: 229,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `checkboxSquareCheck`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `checkboxSquareDisabled`,
      {
        red: 68,
        green: 83,
        blue: 98,
        alpha: 100,
      } as Color,
    ] as [string, Color],
    [
      `checkboxSquareUnchecked`,
      {
        red: 84,
        green: 102,
        blue: 121,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `contacts_inviteBackground`,
      {
        red: 85,
        green: 190,
        blue: 97,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `contacts_inviteText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `contextProgressInner1`,
      {
        red: 85,
        green: 85,
        blue: 85,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `contextProgressInner2`,
      {
        red: 191,
        green: 223,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `contextProgressInner3`,
      {
        red: 179,
        green: 179,
        blue: 179,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `contextProgressInner4`,
      {
        red: 85,
        green: 85,
        blue: 85,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `contextProgressOuter1`,
      {
        red: 79,
        green: 172,
        blue: 248,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `contextProgressOuter2`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `contextProgressOuter3`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `contextProgressOuter4`,
      {
        red: 79,
        green: 172,
        blue: 248,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogBackground`,
      {
        red: 30,
        green: 30,
        blue: 30,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogBackgroundGray`,
      {
        red: 42,
        green: 42,
        blue: 42,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogBadgeBackground`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogBadgeText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogButton`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogButtonSelector`,
      {
        red: 55,
        green: 55,
        blue: 55,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogCameraIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogCheckboxSquareBackground`,
      {
        red: 67,
        green: 160,
        blue: 223,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogCheckboxSquareCheck`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogCheckboxSquareDisabled`,
      {
        red: 72,
        green: 72,
        blue: 72,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogCheckboxSquareUnchecked`,
      {
        red: 90,
        green: 90,
        blue: 90,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogFloatingButton`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogFloatingButtonPressed`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogFloatingIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogGrayLine`,
      {
        red: 72,
        green: 72,
        blue: 72,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogIcon`,
      {
        red: 140,
        green: 140,
        blue: 140,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogInputField`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogInputFieldActivated`,
      {
        red: 55,
        green: 169,
        blue: 240,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogLineProgress`,
      {
        red: 87,
        green: 168,
        blue: 230,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogLineProgressBackground`,
      {
        red: 68,
        green: 68,
        blue: 68,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogLinkSelection`,
      {
        red: 98,
        green: 169,
        blue: 227,
        alpha: 51,
      } as Color,
    ] as [string, Color],
    [
      `dialogProgressCircle`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogRadioBackground`,
      {
        red: 90,
        green: 90,
        blue: 90,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogRadioBackgroundChecked`,
      {
        red: 55,
        green: 169,
        blue: 240,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogRedIcon`,
      {
        red: 238,
        green: 104,
        blue: 111,
        alpha: 222,
      } as Color,
    ] as [string, Color],
    [
      `dialogRoundCheckBox`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogRoundCheckBoxCheck`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogScrollGlow`,
      {
        red: 245,
        green: 245,
        blue: 245,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogSearchBackground`,
      {
        red: 45,
        green: 45,
        blue: 45,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogSearchHint`,
      {
        red: 127,
        green: 127,
        blue: 127,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogSearchIcon`,
      {
        red: 120,
        green: 120,
        blue: 120,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogSearchText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogShadowLine`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 20,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextBlack`,
      {
        red: 246,
        green: 246,
        blue: 246,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextBlue`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextBlue2`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextBlue3`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextBlue4`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextGray`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextGray2`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextGray3`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextGray4`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextHint`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextLink`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextRed`,
      {
        red: 238,
        green: 104,
        blue: 111,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTextRed2`,
      {
        red: 238,
        green: 104,
        blue: 111,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialogTopBackground`,
      {
        red: 111,
        green: 178,
        blue: 229,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialog_inlineProgress`,
      {
        red: 130,
        green: 130,
        blue: 130,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialog_inlineProgressBackground`,
      {
        red: 10,
        green: 10,
        blue: 10,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `dialog_liveLocationProgress`,
      {
        red: 104,
        green: 163,
        blue: 215,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `divider`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `emptyListPlaceholder`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `fastScrollActive`,
      {
        red: 55,
        green: 154,
        blue: 233,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `fastScrollInactive`,
      {
        red: 65,
        green: 65,
        blue: 65,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `fastScrollText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `featuredStickers_addButton`,
      {
        red: 80,
        green: 168,
        blue: 235,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `featuredStickers_addButtonPressed`,
      {
        red: 67,
        green: 155,
        blue: 222,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `featuredStickers_addedIcon`,
      {
        red: 76,
        green: 165,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `featuredStickers_buttonProgress`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `featuredStickers_buttonText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `featuredStickers_delButton`,
      {
        red: 217,
        green: 87,
        blue: 87,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `featuredStickers_delButtonPressed`,
      {
        red: 198,
        green: 73,
        blue: 73,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `featuredStickers_unread`,
      {
        red: 77,
        green: 166,
        blue: 234,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `files_folderIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `files_folderIconBackground`,
      {
        red: 93,
        green: 175,
        blue: 235,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `files_iconText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `graySection`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.20434967377799),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.09704752104554529 + 0.002549567715580209,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `groupcreate_checkboxCheck`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `groupcreate_cursor`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `groupcreate_hintText`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `groupcreate_offlineText`,
      {
        red: 125,
        green: 139,
        blue: 153,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `groupcreate_onlineText`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `groupcreate_sectionShadow`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `groupcreate_sectionText`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `groupcreate_spanBackground`,
      {
        red: 45,
        green: 45,
        blue: 45,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `groupcreate_spanDelete`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `groupcreate_spanText`,
      {
        red: 245,
        green: 245,
        blue: 245,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `inappPlayerBackground`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.1309320307366872),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.1853682052594437 + 0.008807552958486497,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `inappPlayerClose`,
      {
        red: 118,
        green: 119,
        blue: 121,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `inappPlayerPerformer`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `inappPlayerPlayPause`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `inappPlayerTitle`,
      {
        red: 124,
        green: 125,
        blue: 126,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `key_chat_messagePanelVoiceLock`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `key_chat_messagePanelVoiceLockBackground`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.11212898260471138),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.2316926752007293 + 0.013305821214727996,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `key_chat_messagePanelVoiceLockShadow`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 0,
      } as Color,
    ] as [string, Color],
    [
      `key_chats_menuTopShadow`,
      {
        red: 12,
        green: 12,
        blue: 12,
        alpha: 0,
      } as Color,
    ] as [string, Color],
    [
      `key_graySectionText`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.037241908574384336),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.1100178723296228 + 0.21785024883695994,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `key_player_progressCachedBackground`,
      {
        red: 85,
        green: 85,
        blue: 85,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `key_sheet_other`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 67,
      } as Color,
    ] as [string, Color],
    [
      `key_sheet_scrollUp`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 37,
      } as Color,
    ] as [string, Color],
    [
      `listSelector`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 46,
      } as Color,
    ] as [string, Color],
    [
      `listSelectorSDK21`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 13,
      } as Color,
    ] as [string, Color],
    [
      `location_liveLocationProgress`,
      {
        red: 104,
        green: 163,
        blue: 215,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `location_placeLocationBackground`,
      {
        red: 104,
        green: 163,
        blue: 215,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `location_sendLiveLocationBackground`,
      {
        red: 255,
        green: 100,
        blue: 100,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `location_sendLiveLocationIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `location_sendLocationBackground`,
      {
        red: 104,
        green: 163,
        blue: 215,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `location_sendLocationIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `login_progressInner`,
      {
        red: 225,
        green: 234,
        blue: 242,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `login_progressOuter`,
      {
        red: 98,
        green: 160,
        blue: 208,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `musicPicker_buttonBackground`,
      {
        red: 92,
        green: 175,
        blue: 234,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `musicPicker_buttonIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `musicPicker_checkbox`,
      {
        red: 41,
        green: 182,
        blue: 247,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `musicPicker_checkboxCheck`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `passport_authorizeBackground`,
      {
        red: 67,
        green: 131,
        blue: 186,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `passport_authorizeBackgroundSelected`,
      {
        red: 78,
        green: 147,
        blue: 215,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `passport_authorizeText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `picker_badge`,
      {
        red: 86,
        green: 171,
        blue: 247,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `picker_badgeText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `picker_disabledButton`,
      {
        red: 87,
        green: 109,
        blue: 128,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `picker_enabledButton`,
      {
        red: 106,
        green: 191,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_actionBar`,
      {
        red: 32,
        green: 32,
        blue: 32,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_actionBarItems`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_actionBarSelector`,
      {
        red: 42,
        green: 42,
        blue: 42,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_actionBarSubtitle`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_actionBarTitle`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_actionBarTop`,
      {
        red: 32,
        green: 32,
        blue: 32,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_background`,
      {
        red: 35,
        green: 35,
        blue: 35,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_button`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_buttonActive`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_placeholder`,
      {
        red: 100,
        green: 100,
        blue: 100,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_placeholderBackground`,
      {
        red: 52,
        green: 52,
        blue: 52,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_progress`,
      {
        red: 83,
        green: 175,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_progressBackground`,
      {
        red: 60,
        green: 60,
        blue: 60,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `player_seekBarBackground`,
      {
        red: 82,
        green: 82,
        blue: 82,
        alpha: 71,
      } as Color,
    ] as [string, Color],
    [
      `player_time`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `profile_actionBackground`,
      {
        red: 79,
        green: 154,
        blue: 219,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `profile_actionIcon`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `profile_actionPressedBackground`,
      {
        red: 118,
        green: 192,
        blue: 237,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `profile_adminIcon`,
      {
        red: 125,
        green: 139,
        blue: 153,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `profile_creatorIcon`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `profile_status`,
      {
        red: 105,
        green: 193,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `profile_title`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `profile_verifiedBackground`,
      {
        red: 93,
        green: 178,
        blue: 248,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `profile_verifiedCheck`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `progressCircle`,
      {
        red: 100,
        green: 181,
        blue: 253,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `radioBackground`,
      {
        red: 125,
        green: 139,
        blue: 153,
        alpha: 158,
      } as Color,
    ] as [string, Color],
    [
      `radioBackgroundChecked`,
      {
        red: 72,
        green: 166,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `returnToCallBackground`,
      {
        red: 93,
        green: 165,
        blue: 231,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `returnToCallText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `sessions_devicesImage`,
      {
        red: 150,
        green: 150,
        blue: 150,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `sharedMedia_actionMode`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.22096885785727888),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.45658905149872886 + 0.010694269353119684,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `sharedMedia_linkPlaceholder`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.10770937148289347),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.2454569035006679 + 0.014791648743873587,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `sharedMedia_linkPlaceholderText`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.043119228951747586),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.9024846147683949 + 0.15154950302147369,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `sharedMedia_photoPlaceholder`,
      {
        red: 10,
        green: 10,
        blue: 10,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `sharedMedia_startStopLoadIcon`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `sheet_other`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartActivePickerChart`,
      {
        red: 89,
        green: 104,
        blue: 121,
        alpha: 216,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartBackZoomColor`,
      {
        red: 70,
        green: 170,
        blue: 238,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartCheckboxInactive`,
      {
        red: 155,
        green: 155,
        blue: 155,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartChevronColor`,
      {
        red: 118,
        green: 124,
        blue: 133,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartHighlightColor`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 134,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartHintLine`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 26,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartInactivePickerChart`,
      {
        red: 49,
        green: 58,
        blue: 67,
        alpha: 216,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartLine_blue`,
      {
        red: 82,
        green: 159,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartLine_golden`,
      {
        red: 222,
        green: 172,
        blue: 31,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartLine_green`,
      {
        red: 61,
        green: 194,
        blue: 63,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartLine_indigo`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -5.7811184984243 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 1.9658490019781405),
          ),
          brightness: Math.max(
            0,
            Math.min(1, accent.brightness * 67.47513330953238 + 0),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartLine_lightblue`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -28.5608241783335 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 2.1541881462907804),
          ),
          brightness: Math.max(
            0,
            Math.min(1, accent.brightness * 72.23400804556903 + 0),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartLine_lightgreen`,
      {
        red: 143,
        green: 207,
        blue: 57,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartLine_orange`,
      {
        red: 233,
        green: 196,
        blue: 26,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartLine_red`,
      {
        red: 243,
        green: 76,
        blue: 68,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartRipple`,
      {
        red: 164,
        green: 189,
        blue: 210,
        alpha: 44,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartSignature`,
      {
        red: 163,
        green: 177,
        blue: 194,
        alpha: 183,
      } as Color,
    ] as [string, Color],
    [
      `statisticChartSignatureAlpha`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 139,
      } as Color,
    ] as [string, Color],
    [
      `stickers_menu`,
      {
        red: 92,
        green: 92,
        blue: 92,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `stickers_menuSelector`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 23,
      } as Color,
    ] as [string, Color],
    [
      `switch2Track`,
      {
        red: 245,
        green: 126,
        blue: 126,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `switch2TrackChecked`,
      {
        red: 82,
        green: 173,
        blue: 233,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `switchThumb`,
      {
        red: 72,
        green: 93,
        blue: 119,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `switchThumbChecked`,
      {
        red: 97,
        green: 170,
        blue: 225,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `switchTrack`,
      {
        red: 96,
        green: 96,
        blue: 96,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `switchTrackBlue`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.08999498805767475),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 1.6754951104892075 + 0.12467221083759501,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `switchTrackBlueChecked`,
      {
        red: 119,
        green: 209,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `switchTrackBlueSelector`,
      {
        red: 185,
        green: 221,
        blue: 250,
        alpha: 25,
      } as Color,
    ] as [string, Color],
    [
      `switchTrackBlueSelectorChecked`,
      {
        red: 140,
        green: 215,
        blue: 255,
        alpha: 50,
      } as Color,
    ] as [string, Color],
    [
      `switchTrackBlueThumb`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.23027362775819085),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.4296373628218769 + 0.00945478920062633,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `switchTrackBlueThumbChecked`,
      {
        red: 45,
        green: 130,
        blue: 195,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `switchTrackChecked`,
      {
        red: 69,
        green: 156,
        blue: 227,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `undo_background`,
      {
        red: 40,
        green: 40,
        blue: 40,
        alpha: 245,
      } as Color,
    ] as [string, Color],
    [
      `undo_cancelColor`,
      {
        red: 108,
        green: 183,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `undo_infoColor`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_addressConfirmBackground`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 13,
      } as Color,
    ] as [string, Color],
    [
      `wallet_blackBackground`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_blackBackgroundSelector`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 64,
      } as Color,
    ] as [string, Color],
    [
      `wallet_blackText`,
      {
        red: 34,
        green: 34,
        blue: 34,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_buttonBackground`,
      {
        red: 71,
        green: 161,
        blue: 230,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_buttonPressedBackground`,
      {
        red: 43,
        green: 140,
        blue: 214,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_buttonText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_commentText`,
      {
        red: 153,
        green: 153,
        blue: 153,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_dateText`,
      {
        red: 153,
        green: 153,
        blue: 153,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_grayBackground`,
      {
        red: 41,
        green: 41,
        blue: 41,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_graySettingsBackground`,
      {
        red: 240,
        green: 240,
        blue: 240,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_grayText`,
      {
        red: 119,
        green: 119,
        blue: 119,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_grayText2`,
      {
        red: 102,
        green: 102,
        blue: 102,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_greenText`,
      {
        red: 55,
        green: 168,
        blue: 24,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_pullBackground`,
      {
        red: 33,
        green: 33,
        blue: 33,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_redText`,
      {
        red: 219,
        green: 64,
        blue: 64,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_releaseBackground`,
      {
        red: 48,
        green: 124,
        blue: 187,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_statusText`,
      {
        red: 128,
        green: 128,
        blue: 128,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_whiteBackground`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `wallet_whiteText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundCheckText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundChecked`,
      {
        red: 47,
        green: 118,
        blue: 171,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundGray`,
      {
        red: 10,
        green: 10,
        blue: 10,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundGrayShadow`,
      {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundUnchecked`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.23027362775819085),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.4296373628218769 + 0.00945478920062633,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhite`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.1375205693366775),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.17268848355742752 + 0.00771591630945083,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteBlackText`,
      {
        red: 255,
        green: 255,
        blue: 255,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteBlueButton`,
      {
        red: 105,
        green: 182,
        blue: 253,
        alpha: 224,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteBlueHeader`,
      {
        red: 108,
        green: 182,
        blue: 248,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteBlueIcon`,
      {
        red: 105,
        green: 182,
        blue: 253,
        alpha: 224,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteBlueText`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteBlueText2`,
      {
        red: 58,
        green: 159,
        blue: 237,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteBlueText3`,
      {
        red: 77,
        green: 161,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteBlueText4`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteBlueText5`,
      {
        red: 100,
        green: 181,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteBlueText6`,
      {
        red: 58,
        green: 140,
        blue: 207,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteBlueText7`,
      {
        red: 121,
        green: 196,
        blue: 252,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteGrayIcon`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteGrayLine`,
      {
        red: 219,
        green: 219,
        blue: 219,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteGrayText`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteGrayText2`,
      {
        ...hsbToRgb({
          hue: (accent.hue + -17.7771347071135 + 360) % 360,
          saturation: Math.max(
            0,
            Math.min(1, accent.saturation * 0.04086220408837083),
          ),
          brightness: Math.max(
            0,
            Math.min(
              1,
              accent.brightness * 0.9737205972399686 + 0.17316791218872385,
            ),
          ),
        }),
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteGrayText3`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteGrayText4`,
      {
        red: 88,
        green: 88,
        blue: 88,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteGrayText5`,
      {
        red: 125,
        green: 139,
        blue: 153,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteGrayText6`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteGrayText7`,
      {
        red: 198,
        green: 198,
        blue: 198,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteGrayText8`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteGreenText`,
      {
        red: 97,
        green: 189,
        blue: 103,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteGreenText2`,
      {
        red: 97,
        green: 211,
        blue: 107,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteHintText`,
      {
        red: 125,
        green: 125,
        blue: 125,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteInputField`,
      {
        red: 80,
        green: 80,
        blue: 80,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteInputFieldActivated`,
      {
        red: 110,
        green: 178,
        blue: 239,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteLinkSelection`,
      {
        red: 100,
        green: 181,
        blue: 253,
        alpha: 61,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteLinkText`,
      {
        red: 87,
        green: 167,
        blue: 224,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteRedText`,
      {
        red: 205,
        green: 90,
        blue: 90,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteRedText2`,
      {
        red: 241,
        green: 109,
        blue: 102,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteRedText3`,
      {
        red: 210,
        green: 73,
        blue: 73,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteRedText4`,
      {
        red: 207,
        green: 92,
        blue: 95,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteRedText5`,
      {
        red: 238,
        green: 104,
        blue: 111,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteRedText6`,
      {
        red: 255,
        green: 102,
        blue: 102,
        alpha: 255,
      } as Color,
    ] as [string, Color],
    [
      `windowBackgroundWhiteValueText`,
      {
        red: 105,
        green: 182,
        blue: 253,
        alpha: 224,
      } as Color,
    ] as [string, Color],
  ]);

export default night;
